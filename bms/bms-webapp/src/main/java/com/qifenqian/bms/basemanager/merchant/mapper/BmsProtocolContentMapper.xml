<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qifenqian.bms.basemanager.merchant.mapper.BmsProtocolContentMapper" >
  <resultMap id="BaseResultMap" type="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="cust_id" property="custId" jdbcType="VARCHAR" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="protocol_content" property="protocolContent" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="inst_user" property="instUser" jdbcType="VARCHAR" />
    <result column="inst_datetime" property="instDatetime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="protocol_name" property="protocolName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cust_Id, template_id, protocol_content, status, memo, inst_user, inst_datetime, 
    update_user, update_datetime, protocol_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bms_protocol_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bms_protocol_content
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bms_protocol_content
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContentExample" >
    delete from bms_protocol_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent" >
    insert into bms_protocol_content (id, cust_Id, template_id, 
      protocol_content, status, memo, 
      inst_user, inst_datetime, update_user, 
      update_datetime, protocol_name)
    values (#{id,jdbcType=VARCHAR}, #{custId,jdbcType=VARCHAR}, #{templateId,jdbcType=VARCHAR}, 
      #{protocolContent,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{instUser,jdbcType=VARCHAR}, #{instDatetime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateDatetime,jdbcType=TIMESTAMP}, #{protocolName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent" >
    insert into bms_protocol_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="custId != null" >
        cust_ID,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="protocolContent != null" >
        protocol_content,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="instUser != null" >
        inst_user,
      </if>
      <if test="instDatetime != null" >
        inst_datetime,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="protocolName != null" >
        protocol_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="protocolContent != null" >
        #{protocolContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="instUser != null" >
        #{instUser,jdbcType=VARCHAR},
      </if>
      <if test="instDatetime != null" >
        #{instDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolName != null" >
        #{protocolName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContentExample" resultType="java.lang.Integer" >
    select count(*) from bms_protocol_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bms_protocol_content
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null" >
        cust_ID = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.templateId != null" >
        template_id = #{record.templateId,jdbcType=VARCHAR},
      </if>
      <if test="record.protocolContent != null" >
        protocol_content = #{record.protocolContent,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.instUser != null" >
        inst_user = #{record.instUser,jdbcType=VARCHAR},
      </if>
      <if test="record.instDatetime != null" >
        inst_datetime = #{record.instDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDatetime != null" >
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.protocolName != null" >
        protocol_name = #{record.protocolName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bms_protocol_content
    set id = #{record.id,jdbcType=VARCHAR},
      cust_ID = #{record.custId,jdbcType=VARCHAR},
      template_id = #{record.templateId,jdbcType=VARCHAR},
      protocol_content = #{record.protocolContent,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      inst_user = #{record.instUser,jdbcType=VARCHAR},
      inst_datetime = #{record.instDatetime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      protocol_name = #{record.protocolName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent" >
    update bms_protocol_content
    <set >
      <if test="custId != null" >
        cust_ID = #{custId,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="protocolContent != null" >
        protocol_content = #{protocolContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="instUser != null" >
        inst_user = #{instUser,jdbcType=VARCHAR},
      </if>
      <if test="instDatetime != null" >
        inst_datetime = #{instDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolName != null" >
        protocol_name = #{protocolName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent" >
    update bms_protocol_content
    set cust_ID = #{custId,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=VARCHAR},
      protocol_content = #{protocolContent,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      inst_user = #{instUser,jdbcType=VARCHAR},
      inst_datetime = #{instDatetime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      protocol_name = #{protocolName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectContentByCustId" parameterType="string" resultType="com.qifenqian.bms.basemanager.merchant.bean.BmsProtocolContent">
  	SELECT 
    <include refid="Base_Column_List" />
    FROM BMS_PROTOCOL_CONTENT
    WHERE CUST_ID = #{custId,jdbcType=VARCHAR} AND STATUS = 'VALID'
  </select>
</mapper>